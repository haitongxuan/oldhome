<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:acb="http://wpfcontrols.com/"
    xmlns:prs="clr-namespace:OldHome.DesktopApp.Providers"
    xmlns:pu="https://opensource.panuon.com/wpf-ui"
    xmlns:vms="clr-namespace:OldHome.DesktopApp.ViewModels"
    xmlns:w="clr-namespace:OldHome.DesktopApp.Converters">
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    <Style x:Key="NormalNumberInput" TargetType="pu:NumberInput">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="26" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="5,5,0,15" />
    </Style>
    <Style
        x:Key="NormalButton"
        BasedOn="{StaticResource {x:Static pu:StyleKeys.ButtonStyle}}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.CornerRadius" Value="5" />
        <Setter Property="Background" Value="#35AAF7" />
        <Setter Property="Width" Value="60" />
        <Setter Property="pu:IconHelper.FontFamily" Value="{StaticResource PanuonIconFont}" />
        <Setter Property="pu:IconHelper.FontSize" Value="14" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style
        x:Key="QueryButton"
        BasedOn="{StaticResource NormalButton}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe928;" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="pu:IconHelper.HorizontalAlignment" Value="Left" />
        <Setter Property="Content" Value="查 询" />
    </Style>
    <Style
        x:Key="AddButton"
        BasedOn="{StaticResource NormalButton}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe9a7;" />
        <Setter Property="pu:IconHelper.HorizontalAlignment" Value="Left" />
        <Setter Property="Content" Value="新 增" />
    </Style>
    <Style
        x:Key="AddItemButton"
        BasedOn="{StaticResource NormalButton}"
        TargetType="Button">
        <Setter Property="Width" Value="100" />
        <Setter Property="Background" Value="#55Ee66" />
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe9b3;" />
        <Setter Property="pu:IconHelper.HorizontalAlignment" Value="Left" />
        <Setter Property="Content" Value="添 加 明 细" />
    </Style>

    <Style
        x:Key="CellEditButton"
        BasedOn="{StaticResource NormalButton}"
        TargetType="Button">
        <Setter Property="Width" Value="26" />
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe9af;" />
        <Setter Property="pu:IconHelper.Margin" Value="0" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style
        x:Key="CellDeleteButton"
        BasedOn="{StaticResource NormalButton}"
        TargetType="Button">
        <Setter Property="Width" Value="26" />
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe933;" />
        <Setter Property="Background" Value="#FFED563E" />
        <Setter Property="pu:IconHelper.Margin" Value="0" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style
        x:Key="SaveButton"
        BasedOn="{StaticResource NormalButton}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe9aa;" />
        <Setter Property="pu:IconHelper.HorizontalAlignment" Value="Left" />
        <Setter Property="Content" Value="保 存" />
    </Style>
    <Style
        x:Key="EditButton"
        BasedOn="{StaticResource NormalButton}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe9b3;" />
        <Setter Property="pu:IconHelper.HorizontalAlignment" Value="Left" />
        <Setter Property="Content" Value="编 辑" />
    </Style>
    <Style
        x:Key="DeleteButton"
        BasedOn="{StaticResource {x:Static pu:StyleKeys.ButtonStyle}}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe933;" />
        <Setter Property="pu:IconHelper.HorizontalAlignment" Value="Left" />
        <Setter Property="Content" Value="删 除" />
        <Setter Property="pu:ButtonHelper.CornerRadius" Value="5" />
        <Setter Property="Background" Value="#FFED563E" />
        <Setter Property="Width" Value="60" />
        <Setter Property="pu:IconHelper.FontFamily" Value="{StaticResource PanuonIconFont}" />
        <Setter Property="pu:IconHelper.FontSize" Value="14" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style
        x:Key="CancelButton"
        BasedOn="{StaticResource {x:Static pu:StyleKeys.ButtonStyle}}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.CornerRadius" Value="5" />
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="Width" Value="60" />
        <Setter Property="pu:IconHelper.FontFamily" Value="{StaticResource PanuonIconFont}" />
        <Setter Property="pu:IconHelper.FontSize" Value="14" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Foreground" Value="black" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    <Style
        x:Key="ClearButton"
        BasedOn="{StaticResource CancelButton}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.Icon" Value="&#xe9dd;" />
        <Setter Property="pu:IconHelper.HorizontalAlignment" Value="Left" />
        <Setter Property="Content" Value="清 空" />
    </Style>
    <Style x:Key="FormButtonPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Visibility" Value="{Binding State, Converter={w:FormStateToVisibilityConverter}}" />
    </Style>
    <Style x:Key="Header" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0,9,10,0" />
        <Setter Property="Foreground" Value="DimGray" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>
    <Style x:Key="Breadcrumb" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Margin="11,11,3,0"
                            FontFamily="{StaticResource PanuonIconFont}"
                            Style="{StaticResource Header}"
                            Text="&#xe9ad;" />
                        <TextBlock
                            Margin="0,9,4,0"
                            HorizontalAlignment="Left"
                            Style="{StaticResource Header}"
                            Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" />
                        <TextBlock
                            HorizontalAlignment="Left"
                            Style="{StaticResource Header}"
                            Text="&gt;" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="NormalBox"
        BasedOn="{StaticResource {x:Static pu:StyleKeys.TextBoxStyle}}"
        TargetType="TextBox">
        <Setter Property="pu:TextBoxHelper.CornerRadius" Value="2" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="MaxWidth" Value="400" />
        <Setter Property="Height" Value="26" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="5,5,0,15" />
        <Setter Property="pu:TextBoxHelper.FocusedBorderBrush" Value="#36AAF7" />
        <Setter Property="pu:TextBoxHelper.FocusedForeground" Value="#36AAF7" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="DimGray" />
        <Setter Property="IsReadOnly" Value="False" />
    </Style>
    <Style
        x:Key="LargerBox"
        BasedOn="{StaticResource NormalBox}"
        TargetType="TextBox">
        <Setter Property="Width" Value="300" />
    </Style>
    <Style
        x:Key="QueryBox"
        BasedOn="{StaticResource NormalBox}"
        TargetType="TextBox">
        <Setter Property="Width" Value="80" />
    </Style>
    <Style x:Key="NormalSwitch" TargetType="pu:Switch">
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="BorderBrush" Value="#030303" />
        <Setter Property="BoxHeight" Value="20" />
        <Setter Property="BoxWidth" Value="35" />
        <Setter Property="CheckedBackground" Value="#36abff" />
        <Setter Property="CheckedBorderBrush" Value="#36abff" />
        <Setter Property="Content" Value="否" />
        <Setter Property="CheckedContent" Value="是" />
        <Setter Property="CheckedToggleBrush" Value="#fff" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="ToggleBrush" Value="DimGray" />
        <Setter Property="ToggleSize" Value="19" />
    </Style>
    <Style
        x:Key="MultilineBox"
        BasedOn="{StaticResource NormalBox}"
        TargetType="TextBox">
        <Setter Property="Width" Value="220" />
        <Setter Property="Height" Value="75" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
    </Style>
    <DataTemplate x:Key="MedicineItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" SharedSizeGroup="AutoName" />
                <ColumnDefinition Width="auto" SharedSizeGroup="AutoSpecification" />
                <ColumnDefinition Width="auto" SharedSizeGroup="AutoMenufacturer" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                Margin="0,9,4,0"
                HorizontalAlignment="Left"
                Text="{Binding Name}" />
            <TextBlock
                Grid.Column="1"
                Margin="0,9,4,0"
                HorizontalAlignment="Left"
                Text="{Binding Specification}" />
            <TextBlock
                Grid.Column="2"
                Margin="0,9,4,0"
                HorizontalAlignment="Left"
                Text="{Binding Manufacturer}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ResidentItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" SharedSizeGroup="AutoName" />
                <ColumnDefinition Width="auto" SharedSizeGroup="AutoCode" />
                <ColumnDefinition Width="auto" SharedSizeGroup="AutoRoom" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                Margin="0,9,4,0"
                HorizontalAlignment="Left"
                Text="{Binding Name}" />
            <TextBlock
                Grid.Column="1"
                Margin="0,9,4,0"
                HorizontalAlignment="Left"
                Text="{Binding Specification}" />
            <TextBlock
                Grid.Column="2"
                Margin="0,9,4,0"
                HorizontalAlignment="Left"
                Text="{Binding RoomNumber}" />
        </Grid>
    </DataTemplate>
    <Style
        x:Key="FormBox"
        BasedOn="{StaticResource NormalBox}"
        TargetType="TextBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="View">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="#D6D6D6" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="FormNumberInput"
        BasedOn="{StaticResource NormalNumberInput}"
        TargetType="pu:NumberInput">
        <Style.Triggers>
            <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="View">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="#D6D6D6" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="FormMultilineBox"
        BasedOn="{StaticResource MultilineBox}"
        TargetType="TextBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="View">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="#D6D6D6" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="EditReadonlyBox"
        BasedOn="{StaticResource NormalBox}"
        TargetType="TextBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="Edit">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="#D6D6D6" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="View">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="#D6D6D6" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="NormalComboBox"
        BasedOn="{StaticResource {x:Static pu:StyleKeys.ComboBoxStyle}}"
        TargetType="ComboBox">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="26" />
        <Setter Property="pu:ComboBoxHelper.CornerRadius" Value="2" />
        <Setter Property="pu:DropDownHelper.CornerRadius" Value="0,0,2,2" />
        <Setter Property="pu:ComboBoxHelper.ItemsHoverBackground" Value="#2236AAF7" />
        <Setter Property="pu:ComboBoxHelper.ItemsSelectedBackground" Value="#36AAF7" />
        <Setter Property="pu:ComboBoxHelper.ItemsSelectedForeground" Value="#fff" />
        <Setter Property="pu:ComboBoxHelper.OpenedCornerRadius" Value="2,2,0,0" />
        <Setter Property="pu:ComboBoxHelper.OpenedForeground" Value="#36AAF7" />
        <Setter Property="pu:ComboBoxHelper.WatermarkForeground" Value="Gray" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="5,5,5,15" />
        <Setter Property="Foreground" Value="DimGray" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style
        x:Key="EnumComboBox"
        BasedOn="{StaticResource NormalComboBox}"
        TargetType="ComboBox">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                        <TextBlock
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Text="{Binding Converter={w:EnumDisplayNameConverter}}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="FormComboBox"
        BasedOn="{StaticResource NormalComboBox}"
        TargetType="ComboBox">
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="View">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="Gray" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="FormEnumComboBox"
        BasedOn="{StaticResource EnumComboBox}"
        TargetType="ComboBox">
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="View">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="Gray" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ReadonlyBox"
        BasedOn="{StaticResource {x:Static pu:StyleKeys.TextBoxStyle}}"
        TargetType="TextBox">
        <Setter Property="pu:TextBoxHelper.CornerRadius" Value="5" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Background" Value="DimGray" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="26" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    <Style
        x:Key="DrawerButton"
        BasedOn="{StaticResource {x:Static pu:StyleKeys.ToggleButtonStyle}}"
        TargetType="ToggleButton">
        <Setter Property="Width" Value="11" />
        <Setter Property="Height" Value="80" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="pu:ToggleButtonHelper.CheckedBackground" Value="#6CBCEA" />
        <Setter Property="pu:ToggleButtonHelper.CheckedContent" Value="&#xe924;" />
        <Setter Property="pu:ToggleButtonHelper.CornerRadius" Value="0,5,5,0" />
        <Setter Property="FontFamily" Value="{StaticResource PanuonIconFont}" />
        <Setter Property="FontSize" Value="8" />
        <Setter Property="Background" Value="#6CBCEA" />
        <Setter Property="Content" Value="&#xe926;" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    <Style x:Key="StandardPaginationStyle" TargetType="pu:Pagination">
        <Setter Property="Height" Value="24" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="ItemsBackground" Value="Transparent" />
        <Setter Property="ItemsCornerRadius" Value="12" />
        <Setter Property="ItemsSelectedBackground" Value="#35AAF7" />
        <Setter Property="ItemsSelectedForeground" Value="#FFFFFF" />
        <Setter Property="PageTurnButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static pu:Pagination.PageTurnButtonStyleKey}}" TargetType="RepeatButton">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="pu:RepeatButtonHelper.HoverForeground" Value="#35AAF7" />
                    <Setter Property="pu:RepeatButtonHelper.CornerRadius" Value="12" />
                    <Setter Property="Foreground" Value="#000" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="NormalDataGrid"
        BasedOn="{StaticResource {x:Static pu:StyleKeys.DataGridStyle}}"
        TargetType="DataGrid">
        <Setter Property="pu:DataGridHelper.ColumnHeaderHorizontalContentAlignment" Value="Center" />
        <Setter Property="pu:DataGridHelper.ColumnHeaderVerticalContentAlignment" Value="Center" />
        <Setter Property="pu:DataGridHelper.RowSelectedBackground" Value="#889944ff" />
        <Setter Property="pu:DataGridHelper.RowSelectedForeground" Value="#fff" />
        <Setter Property="pu:ScrollViewerHelper.ScrollBarPosition" Value="VerticalInside" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <Style x:Key="CenterAlignmentStyle" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="CheckBoxCenterAlignmentStyle" TargetType="CheckBox">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="Padding" Value="10,0,10,0" />
    </Style>


    <Style x:Key="NormalDatePicker" TargetType="pu:DateTimePicker">
        <Setter Property="Width" Value="200" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="26" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="5,5,0,15" />
        <Setter Property="ItemsCheckedBackground" Value="#36AAF7" />
        <Setter Property="ItemsCheckedBorderBrush" Value="#36AAF7" />
        <Setter Property="ItemsCheckedBorderThickness" Value="2" />
        <Setter Property="ItemsCheckedCornerRadius" Value="5" />
        <Setter Property="ItemsCornerRadius" Value="5" />
        <Setter Property="ItemsHoverBackground" Value="#2236AAF7" />
        <Setter Property="ItemsHoverCornerRadius" Value="5" />
        <Setter Property="TextStringFormat" Value="yyyy-MM-dd" />
        <Setter Property="ClearButtonVisibility" Value="VisibleOnHoverAndNonnull" />
        <Setter Property="CornerRadius" Value="2" />
    </Style>
    <Style
        x:Key="FormDatePicker"
        BasedOn="{StaticResource NormalDatePicker}"
        TargetType="pu:DateTimePicker">
        <Setter Property="IsEnabled" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="View">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="Gray" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PanuonLargerAutoCompleteTextBox" TargetType="acb:AutoCompleteTextBox">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="acb:AutoCompleteTextBox">
                    <Grid>
                        <DockPanel>
                            <ContentPresenter
                                x:Name="PART_Icon"
                                ContentSource="Icon"
                                Visibility="{TemplateBinding IconVisibility}" />
                            <Grid>
                                <TextBlock
                                    x:Name="PART_Watermark"
                                    Margin="3,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    Foreground="Gray"
                                    Text="{TemplateBinding Watermark}"
                                    Visibility="Collapsed" />
                                <TextBox
                                    x:Name="PART_Editor"
                                    Margin="5,5,0,0"
                                    Padding="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    pu:TextBoxHelper.ClearButtonVisibility="VisibleOnFocusedAndNonnull"
                                    CharacterCasing="{Binding Path=CharacterCasing, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                    Focusable="True"
                                    MaxLength="{Binding Path=MaxLength, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                    Style="{StaticResource ResourceKey=LargerBox}"
                                    Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                            </Grid>
                        </DockPanel>
                        <Popup
                            x:Name="PART_Popup"
                            Width="{TemplateBinding ActualWidth}"
                            MinHeight="10"
                            MaxHeight="900"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="0"
                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                            PopupAnimation="Slide">
                            <Border
                                Padding="2"
                                Background="White"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                CornerRadius="5">
                                <Grid>
                                    <ListBox
                                        x:Name="PART_Selector"
                                        MaxHeight="{Binding Path=MaxPopupHeight, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                        BorderThickness="0"
                                        Focusable="False"
                                        ItemTemplate="{TemplateBinding ItemTemplate}"
                                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto" />
                                    <Border Visibility="{Binding Path=IsLoading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ResourceKey=BoolToVisConverter}}">
                                        <ContentPresenter ContentSource="LoadingContent" />
                                    </Border>
                                </Grid>
                            </Border>
                        </Popup>

                    </Grid>
                    <!--</Border>-->
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Editor" Property="Text" Value="">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Left">
                            <Setter TargetName="PART_Icon" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Right">
                            <Setter TargetName="PART_Icon" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PanuonNormalAutoCompleteTextBox" TargetType="acb:AutoCompleteTextBox">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="acb:AutoCompleteTextBox">
                    <Grid>
                        <DockPanel>
                            <ContentPresenter
                                x:Name="PART_Icon"
                                ContentSource="Icon"
                                Visibility="{TemplateBinding IconVisibility}" />
                            <Grid>
                                <TextBlock
                                    x:Name="PART_Watermark"
                                    Margin="3,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    Foreground="Gray"
                                    Text="{TemplateBinding Watermark}"
                                    Visibility="Collapsed" />
                                <TextBox
                                    x:Name="PART_Editor"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    pu:TextBoxHelper.ClearButtonVisibility="VisibleOnFocusedAndNonnull"
                                    CharacterCasing="{Binding Path=CharacterCasing, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                    Focusable="True"
                                    MaxLength="{Binding Path=MaxLength, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                    Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                                    <TextBox.Style>
                                        <Style BasedOn="{StaticResource NormalBox}" TargetType="TextBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding State, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="View">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                    <Setter Property="Background" Value="Gray" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </DockPanel>
                        <Popup
                            x:Name="PART_Popup"
                            Width="{TemplateBinding ActualWidth}"
                            MinHeight="25"
                            MaxHeight="900"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="0"
                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                            PopupAnimation="Slide">
                            <Border
                                Padding="2"
                                Background="White"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                CornerRadius="5">
                                <Grid>
                                    <ListBox
                                        x:Name="PART_Selector"
                                        MaxHeight="{Binding Path=MaxPopupHeight, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                        BorderThickness="0"
                                        Focusable="False"
                                        ItemTemplate="{TemplateBinding ItemTemplate}"
                                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto" />
                                    <Border Visibility="{Binding Path=IsLoading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ResourceKey=BoolToVisConverter}}">
                                        <ContentPresenter ContentSource="LoadingContent" />
                                    </Border>
                                </Grid>
                            </Border>
                        </Popup>

                    </Grid>
                    <!--</Border>-->
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Editor" Property="Text" Value="">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Left">
                            <Setter TargetName="PART_Icon" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Right">
                            <Setter TargetName="PART_Icon" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PanuonAutoCompleteComboBox" TargetType="acb:AutoCompleteComboBox">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type acb:AutoCompleteComboBox}">
                    <Grid>
                        <DockPanel>
                            <ContentPresenter
                                x:Name="PART_Icon"
                                ContentSource="Icon"
                                Visibility="{TemplateBinding IconVisibility}" />
                            <Grid>
                                <TextBlock
                                    x:Name="PART_Watermark"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left"
                                    Focusable="False"
                                    Foreground="Gray"
                                    Text="{TemplateBinding Watermark}"
                                    Visibility="Collapsed" />
                                <DockPanel Margin="3,0">
                                    <Expander x:Name="PART_Expander" DockPanel.Dock="Right" />
                                    <TextBox
                                        x:Name="PART_Editor"
                                        Width="300"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        pu:TextBoxHelper.ClearButtonVisibility="VisibleOnFocusedAndNonnull"
                                        CharacterCasing="{Binding Path=CharacterCasing, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                        Focusable="True"
                                        MaxLength="{Binding Path=MaxLength, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                        Style="{StaticResource ResourceKey=NormalBox}"
                                        Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                                </DockPanel>
                            </Grid>
                        </DockPanel>
                        <Popup
                            x:Name="PART_Popup"
                            Width="{TemplateBinding ActualWidth}"
                            MinHeight="25"
                            MaxHeight="600"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="0"
                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                            PopupAnimation="Slide">
                            <Border
                                Padding="2"
                                Background="White"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                CornerRadius="5">
                                <Grid>
                                    <ListBox
                                        x:Name="PART_Selector"
                                        MaxHeight="{Binding Path=MaxPopupHeight, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                        BorderThickness="0"
                                        Focusable="False"
                                        ItemTemplate="{TemplateBinding ItemTemplate}"
                                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto" />
                                    <Border Visibility="{Binding Path=IsLoading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ResourceKey=BoolToVisConverter}}">
                                        <ContentPresenter ContentSource="LoadingContent" />
                                    </Border>
                                </Grid>
                            </Border>
                        </Popup>

                    </Grid>
                    <!--</Border>-->
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Editor" Property="Text" Value="">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Left">
                            <Setter TargetName="PART_Icon" Property="DockPanel.Dock" Value="Left" />
                        </Trigger>
                        <Trigger Property="IconPlacement" Value="Right">
                            <Setter TargetName="PART_Icon" Property="DockPanel.Dock" Value="Right" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <prs:ResidentProvider x:Key="EmptyResidentProvider" AllowEmptyFilter="True" />
    <prs:ResidentProvider x:Key="UnemptyResidentProvider" AllowEmptyFilter="False" />
    <prs:MedicineProvider x:Key="EmptyMedicineProvider" AllowEmptyFilter="True" />
    <prs:MedicineProvider x:Key="UnemptyMedicineProvider" AllowEmptyFilter="False" />
</ResourceDictionary>